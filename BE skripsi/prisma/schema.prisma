generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  walletAddress String      @id // Tidak nullable, sebagai primary key
  name          String?     // Nullable
  email         String?     @unique // Nullable, tapi unik jika diisi
  password      String?     // Nullable
  role          String      @default("verifier") // Role: "issuer" atau "verifier"
  createdAt     DateTime?   // Nullable, tanpa default
  templates     Template[]  // Relasi ke Template
  issuedCertificates Certificate[] @relation("CertificateIssuer") // Sertifikat yang diterbitkan
  receivedCertificates Certificate[] @relation("CertificateRecipient") // Sertifikat yang diterima
}

model Template {
  id         String    @id @default(uuid())
  userId     String    @db.VarChar(255)
  user       User      @relation(fields: [userId], references: [walletAddress]) // Relasi ke User
  name       String    @db.VarChar(255) 
  filePath   String    @db.VarChar(255) 
  nameX      Float?    // Koordinat X untuk posisi nama (persentase, nullable)
  nameY      Float?    // Koordinat Y untuk posisi nama (persentase, nullable)
  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  certificates Certificate[] 
}

model Certificate {
  id               String    @id @default(uuid())
  templateId       String    
  template         Template  @relation(fields: [templateId], references: [id])
  recipientName    String    @db.VarChar(100)
  certificateTitle String    @db.VarChar(200)
  issueDate        DateTime  
  expiryDate       DateTime? 
  description      String?   @db.Text
  issuerName       String    @db.VarChar(100)
  targetAddress    String    @db.VarChar(42)
  issuerAddress    String    @db.VarChar(42)
  filePath         String    @db.VarChar(255)
  ipfsCid          String    @db.VarChar(255)  // Menyimpan CID dari IPFS
  status           String    @db.VarChar(20)   // Status sertifikat (active, revoked, expired)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  issuer           User      @relation("CertificateIssuer", fields: [issuerAddress], references: [walletAddress])
  recipient        User      @relation("CertificateRecipient", fields: [targetAddress], references: [walletAddress])
}